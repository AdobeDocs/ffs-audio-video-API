{"version":3,"file":"component---src-pages-guides-avatar-index-md-e12c5a105fbb1247f464.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/guides/avatar/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/ffs-audio-video-API/ffs-audio-video-API/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"using-the-avatar-api\"\n    }}>{`Using the Avatar API`}</h1>\n    <p>{`The Avatar API offers automated video creation using a digital avatar speaking from a provided transcript. This guide shows you how to get started using the asynchronous API.`}</p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Using the Avatar API you can generate an Avatar video with a text prompt or audio input.\nOptions with the endpoint allow you to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Select an avatar from a catalog of stock actors.`}</li>\n      <li parentName=\"ul\">{`Select a voice from a catalog of stock voices.`}</li>\n      <li parentName=\"ul\">{`Use your own voice file to create avatar videos.`}</li>\n      <li parentName=\"ul\">{`Set your own image/video as a video background.`}</li>\n    </ul>\n    <p>{`The endpoint returns a response object like the one below. Use the `}<inlineCode parentName=\"p\">{`statusUrl`}</inlineCode>{` from the response to `}<a parentName=\"p\" {...{\n        \"href\": \"#check-the-status-of-a-job\"\n      }}>{`check the job result`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"jobId\": \"986fc222-1118-4242-b326-eb9873e3982f\",\n    \"statusUrl\": \"https://audio-video-api.adobe.io/v1/status/{jobID}\"\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/ffs-audio-video-API/getting_started/\"\n      }}>{`Review the Getting Started page`}</a>{` for this API for authentication and setup.`}</p>\n    <h3 {...{\n      \"id\": \"api-credentials\"\n    }}>{`API credentials`}</h3>\n    <p>{`You'll need:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`client_id`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`client_secret`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"quickstart\"\n    }}>{`Quickstart`}</h2>\n    <p>{`Use the commands below to generate an Avatar video.`}</p>\n    <p>{`In the cURL commands, be sure to update:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Authorization`}</inlineCode>{` with the bearer token.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`x-api-key`}</inlineCode>{` with the Client ID.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`mediaType`}</inlineCode>{` the correct input format.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`url`}</inlineCode>{` (where applicable) with the generated pre-signed URL.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`avatarId`}</inlineCode>{` with the unique ID of the avatar to be used for avatar generation. Users should `}<a parentName=\"li\" {...{\n          \"href\": \"/ffs-audio-video-API/api\"\n        }}>{`refer to the Avatars List API`}</a>{` to choose the appropriate Avatar ID.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`voiceId`}</inlineCode>{` with the unique ID of the voice to be used for avatar generation. Users should `}<a parentName=\"li\" {...{\n          \"href\": \"/ffs-audio-video-API/api\"\n        }}>{`refer to the Voices List API`}</a>{` to choose the appropriate Voice ID.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"generate-a-video-from-plain-text-input\"\n    }}>{`Generate a video from plain text input`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl 'https://audio-video-api.adobe.io/v1/generate-avatar' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'Authorization: Bearer <Token>' \\\\\n  -H 'x-api-key: <Client_ID>' \\\\\n  --data-raw '{\n    \"script\": {\n        \"text\": \"<script text>\",\n        \"mediaType\": \"text/plain\",\n        \"localeCode\": \"en-US\"\n    },\n    \"voiceId\": \"<voice ID>\",\n    \"avatarId\": \"<avatar ID>\",\n    \"output\": {\n        \"mediaType\": \"video/mp4\"\n    }\n}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"generate-a-video-from-a-text-file-input\"\n    }}>{`Generate a video from a text file input`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl 'https://audio-video-api.adobe.io/v1/generate-avatar' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'Authorization: Bearer <Token>' \\\\\n  -H 'x-api-key: <Client_ID>' \\\\\n  --data-raw '{\n    \"script\": {\n        \"source\": {\n            \"url\": \"<pre-signed URL of text file>\"\n        },\n        \"mediaType\": \"text/plain\",\n        \"localeCode\": \"en-US\"\n    },\n    \"voiceId\": \"<voice ID>\",\n    \"avatarId\": \"<avatar ID>\",\n    \"output\": {\n        \"mediaType\": \"video/mp4\"\n    }\n}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"generate-a-video-from-an-audio-file-input\"\n    }}>{`Generate a video from an audio file input`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl 'https://audio-video-api.adobe.io/v1/generate-avatar' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'Authorization: Bearer <Token>' \\\\\n  -H 'x-api-key: <Client_ID>' \\\\\n  --data-raw '{\n    \"audio\": {\n        \"source\": {\n            \"url\": \"<pre-signed URL of input audio>\"\n        },\n        \"mediaType\": \"audio/wav\",\n        \"localeCode\": \"en-US\"\n    },\n    \"avatarId\": \"<avatar ID>\",\n    \"output\": {\n        \"mediaType\": \"video/mp4\"\n    }\n}'  \n`}</code></pre>\n    <h3 {...{\n      \"id\": \"use-a-custom-background\"\n    }}>{`Use a custom background`}</h3>\n    <p>{`Change the background of the Avatar video by providing a pre-signed URL of a video or image, or opt for a transparent or color background to use as a replacement.`}</p>\n    <InlineAlert slots=\"header,text\" mdxType=\"InlineAlert\" />\n    <p>{`NOTE`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/ffs-audio-video-API/getting_started/usage/\"\n      }}>{`Refer to the Technical Usage notes`}</a>{` to understand the supported formats, aspect ratio, etc. for video and image backgrounds.`}</p>\n    <h4 {...{\n      \"id\": \"generate-a-video-from-text-input-with-a-video-background\"\n    }}>{`Generate a video from text input with a video background`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl 'https://audio-video-api.adobe.io/v1/generate-avatar' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'Authorization: Bearer <Token>' \\\\\n  -H 'x-api-key: <Client_ID>' \\\\\n  --data-raw '{\n    \"script\": {\n        \"text\": \"<script text>\",\n        \"mediaType\": \"text/plain\",\n        \"localeCode\": \"en-US\"\n    },\n    \"voiceId\": \"<voice ID>\",\n    \"avatarId\": \"<avatar ID>\",\n    \"output\": {\n        \"mediaType\": \"video/mp4\",\n        \"background\": {\n            \"type\": \"video\",\n            \"source\": {\n                \"url\": \"<pre-signed URL of background video>\"\n            }\n        }\n    }\n}'  \n`}</code></pre>\n    <h4 {...{\n      \"id\": \"generate-a-video-from-text-input-with-a-image-background\"\n    }}>{`Generate a video from text input with a image background`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl 'https://audio-video-api.adobe.io/v1/generate-avatar' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'Authorization: Bearer <Token>' \\\\\n  -H 'x-api-key: <Client_ID>' \\\\\n  --data-raw '{\n    \"script\": {\n        \"text\": \"<script text>\",\n        \"mediaType\": \"text/plain\",\n        \"localeCode\": \"en-US\"\n    },\n    \"voiceId\": \"<voice ID>\",\n    \"avatarId\": \"<avatar ID>\",\n    \"output\": {\n        \"mediaType\": \"video/mp4\",\n        \"background\": {\n            \"type\": \"image\",\n            \"source\": {\n                \"url\": \"<pre-signed URL of background image>\"\n            }\n        }\n    }\n}'  \n`}</code></pre>\n    <h3 {...{\n      \"id\": \"check-the-status-of-a-job\"\n    }}>{`Check the status of a job`}</h3>\n    <p>{`Use the GET Result API to see the status of a job. In the command below, update:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`statusUrl`}</inlineCode>{` with the URL returned in the response of the Avatar API call.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Authorization`}</inlineCode>{` with the bearer token.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`x-api-key`}</inlineCode>{` with the Client ID.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location '<statusUrl>' \\\\\n  -H 'Authorization: Bearer <Token>' \\\\\n  -H 'x-api-key: <Client_ID>' \n`}</code></pre>\n    <p><strong parentName=\"p\">{`Sample Avatar API response`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`{\n    \"jobId\": \"986fc222-1118-4242-b326-eb9873e3982f\",\n    \"status\": \"succeeded\",\n    \"output\": {\n        \"url\": \"<pre-signed URL of the result>\"\n    }\n}\n`}</code></pre>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`url`}</inlineCode>{` to download the generated video.`}</p>\n    <h3 {...{\n      \"id\": \"verify-with-content-credentials\"\n    }}>{`Verify with Content Credentials`}</h3>\n    <p>{`Adobe participates in the content authentication initiative for AI-generated assets, addressing concerns around content legitimacy. Register your content by uploading the file at `}<a parentName=\"p\" {...{\n        \"href\": \"https://contentcredentials.org/verify\"\n      }}>{`ContentCredential.org`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","isMDXComponent"],"sourceRoot":""}